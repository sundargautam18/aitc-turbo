version: '3.8'  # Docker Compose file version. 3.8 supports modern features for production.

services:
  web:  # Define a service called 'web', which is our Next.js application.
    build:
      context: .  # The root folder is the build context (files accessible during Docker build)
      dockerfile: apps/web/Dockerfile  # Path to the Dockerfile used to build this service
    ports:
      - '3000:3000'  # Map container port 3000 to host port 3000 (accessible at http://localhost:3000)
    environment:  # Environment variables injected into the container
      - NODE_ENV=production  # Run Next.js in production mode
      - NEXT_PUBLIC_LANGUAGE_SHEET_API_KEY=AIzaSyDpmhMGIfXJGXJ6rszaBGW3LuqVo49t_bA  # Google Sheets API key
      - NEXT_PUBLIC_LANGUAGE_SPREAD_SHEET_ID=11AkdGEAf8dOrRV4A6uP_4HRCYhfQkt3FEIAQv86pqNo  # ID of the Google Sheet for translations/language data
      - NEXT_PUBLIC_LANGUAGE_SHEET_RANGE=Sheet1!A:ZZ  # Cell range in Google Sheet to fetch (all columns in Sheet1)
      - NEXT_PUBLIC_BASE_URL=https://ats-be.vedastudios.com.np/api/v1  # Backend API URL
      - NEXT_PUBLIC_IMAGE_URL=https://d3o9ect5czyljq.cloudfront.net  # Base URL for images
    restart: unless-stopped  # Automatically restart the container unless manually stopped


  # candidate:
  #   build:
  #     context: .
  #     dockerfile: apps/candidate/Dockerfile
  #   ports:
  #     - '3002:3000'
  #   environment:
  #     - NODE_ENV=production
  #   restart: unless-stopped

  # super-admin:
  #   build:
  #     context: .
  #     dockerfile: apps/super-admin/Dockerfile
  #   ports:
  #     - '3003:3000'
  #   environment:
  #     - NODE_ENV=production
  #   restart: unless-stopped
